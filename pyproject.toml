[build-system]
requires = ["setuptools>=61.0.0", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "psycop"
version = "1.0.0"
authors = [
  {name = "Martin Bernstorff", email = "martinbernstorff@gmail.com"}
]
description = "PSYCOP"
classifiers = [
  "Operating System :: POSIX :: Linux",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: Microsoft :: Windows",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10"
]
requires-python = ">=3.9"
dependencies = [
  "pydantic"
]

[project.license]
file = "LICENSE"
name = "MIT"
[project.optional-dependencies]
dev = [
  "cruft",
  "pyright",
  "pyright-polite",
  "pre-commit==2.20.0,<2.21.0",
  "ruff==0.0.254", # important that these match the pre-commit hooks
  "black[jupyter]==22.8.0", # important that these match the pre-commit hooks
  "pandas-stubs", # type stubs for pandas
  "invoke",
]
tests = [
  "pytest>=7.1.3,<7.3.0",
  "pytest-cov>=3.0.0,<3.1.0",
  "pytest-xdist>=3.0.0,<3.2.0",
  "pytest-sugar>=0.9.4,<0.10.0",
  "tox",
]
docs = [
  "sphinx>=5.3.0,<5.4.0",
  "furo>=2022.12.7,<2022.12.8",  # theme
  "sphinx-copybutton>=0.5.1,<0.5.2",
  "sphinxext-opengraph>=0.7.3,<0.7.4",
  "sphinx_design>=0.3.0,<0.3.1",
  "sphinx_togglebutton>=0.2.3,<0.4.0",
  "myst-nb>=0.6.0,<1.17.0",  # for rendering notebooks
  "jupyter>=1.0.0,<1.1.0",  # for tutorials
]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
homepage = "https://github.com/Aarhus-Psychiatry-Research/psycop-common"
repository = "https://github.com/Aarhus-Psychiatry-Research/psycop-common"
documentation = "https://Aarhus-Psychiatry-Research.github.io/psycop-common/"

[tool.pyright]
exclude = [".*venv*", ".tox"]
pythonPlatform = "Darwin"

[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = [
  "A",
  "ANN",
  "ARG",
  "B",
  "C4",
  "COM",
  "D417",
  "E",
  "ERA",
  "F",
  "I",
  "ICN",
  "NPY001",
  "PD002",
  "PIE",
  "PLE",
  "PLW",
  "PT",
  "UP",
  "Q",
  "PTH",
  "RSE",
  "RET",
  "RUF",
  "SIM",
  "W"
]
ignore = [
  "ANN101",
  "ANN401",
  "E402",
  "E501",
  "F401",
  "F841",
  "RET504"
]
ignore-init-module-imports = true
# Allow autofix for all enabled rules (when `--fix`) is provided.
unfixable = ["ERA"]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".hg",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
  "__init__.py",
  "docs/conf.py",
]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
target-version = "py39"

[tool.ruff.flake8-annotations]
mypy-init-return = true
suppress-none-returning = true

[tool.ruff.isort]
known-third-party = ["wandb"]

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.semantic_release]
branch = "main"
version_variable = [
  "pyproject.toml:version"
]
upload_to_pypi = false
upload_to_release = false
build_command = "python -m pip install build; python -m build"

[tool.setuptools]
include-package-data = true


[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py{39,310}

[testenv]
description: run unit tests
extras = tests
use_develop = true
commands =
  pytest -n auto {posargs:test}

[testenv:type]
description: run type checks
extras = test, dev
basepython = py39 # Setting these explicitly avoid recreating env if your shell is set to a different version
use_develop = true
commands =
  pyright .

[testenv:docs]
description: build docs
extras = docs
basepython = py39 # Setting these explicitly avoid recreating env if your shell is set to a different version
use_develop = true
commands =
  sphinx-build -b html docs docs/_build/html
"""
