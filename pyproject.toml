[project]
name = "psycop_model_training"
version = "0.41.3"
description = "PSYCOP model training utilities"
authors = [{name = "Martin Bernstorff", email = "martinbernstorff@gmail.com"},
    {name = "Lasse Hansen", email = "lasseh0310@gmail.com"},
    {name = "Kenneth Enevoldsen"}]

requires-python = ">=3.8.0"

dependencies = [
    "pandas>=1.4.3,<1.6.0",
    "scikit-learn>=1.1.1,<1.3.0",
    "xgboost>=1.6.1,<1.8.0",
    "hydra-core>=1.1.13,<1.4.0",
    "plotly>=5.8.2,<5.14.0",
    "matplotlib>=3.5.2,<3.8.0",
    "wandb>=0.12.21,<0.14.0",
    "tabulate>=0.8.10,<0.10.0",
    "optuna>=2.10.1,<3.2.0",
    "hydra-optuna-sweeper>=1.2.0,<1.3.0",
    "hydra-joblib-launcher>=1.2.0, <1.3.0",
    "selenium>=4.2.0,<4.8.0",
    "seaborn>=0.12.0,<0.12.2",
    "pyarrow>=9.0.0,<10.1.0",
    "Random-Word>=1.0.11, <=1.0.12",
    "diskcache>=5.4.0",
    "psycopmlutils>=0.3.0,<0.4.0",
    "Levenshtein>=0.20.0, <0.21.0",
    "seaborn>=0.10.1, <0.13.0",
]

[project.optional-dependencies]
dev = [
    "mypy",
    "pre-commit>=2.19.0,<3.1.2",
    "setuptools>=65.3.0,<67.6.0",
    "ruff==0.0.254", # important that these match the pre-commit hooks
    "black==22.8.0", # important that these match the pre-commit hooks
    "pandas-stubs",
    "pydantic",
]

tests = [
    "pytest>=7.1.2,<7.2.3",
    "pytest-cov>=3.0.0,<4.0.1",
    "pytest-xdist>=3.0.0,<3.2.0",
]

[build-system]
requires = ["setuptools>=61.0.0", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[tool.coverage.run]
omit = [
    "**/tests/*",
    "**/_vendorized/*",
    "**/about.py",
]

exclude_lines = [
    "pragma: no cover",
    # Don't complain about missing debug-only code:
    "def __unicode__",
    "def __repr__",
    "if self.debug",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.mypy]
ignore_missing_imports = true
no_implicit_optional = true
plugins = "pydantic.mypy"

[tool.pylint]
load-plugins = "pylint.extensions.docparams,pylint.extensions.code_style,pylint.extensions.for_any_all,pylint.extensions.typing"
good-names = "df,p,f,d,e,n,k,i,v,y_,X,y"
disable = "too-many-lines,line-too-long,missing-raises-doc,no-self-argument,unused-wildcard-import,wildcard-import,no-else-return,too-many-arguments,redefined-outer-name,c-extension-no-member,wrong-import-order,import-outside-toplevel,unused-import,wrong-import-position,deprecated-typing-alias,missing-module-docstring,ungrouped-imports"
extension-pkg-allow-list = "wandb,pydantic"

[tool.pylint.'MESSAGES CONTROL']
extension-pkg-whitelist = "pydantic"

[tool.pytest.ini_options]
markers = [
    "pre_push_test: Tests run on push. Should be as minimal as possible to maintain fast push speeds.",
]
pythonpath = [
  "."
]

[tool.semantic_release]
branch = "main"
version_variable = [
    "pyproject.toml:version"
]
upload_to_pypi = false
upload_to_release = true
build_command = "python -m pip install build; python -m build"

[tool.pytest-xdist]
n = 4

[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = [
    "A", 
    "ARG", 
    "B", 
    "C4", 
    "COM", 
    "D417", 
    "E", 
    "ERA", 
    "F", 
    "I", 
    "ICN", 
    "NPY001", 
    "PD002", 
    "PIE", 
    "PLE", 
    "PLW", 
    "PT", 
    "UP", 
    "Q", 
    "PTH", 
    "RSE", 
    "RET", 
    "SIM", 
    "W"
]
ignore = [
    "E402", 
    "E501", 
    "RET504"
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
unfixable = ["ERA"]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "__init__.py",
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

target-version = "py39"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.isort]
known-third-party = ["wandb"]