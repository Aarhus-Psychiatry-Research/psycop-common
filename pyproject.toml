[build-system]
requires = ["setuptools>=61.0.0", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "psycop_feature_generation"
version = "0.21.2"
description = ""
authors = [
  {name = "Martin Bernstorff", email = "martinbernstorfff@gmail.com"}
]
classifiers = [
  "Operating System :: POSIX :: Linux",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: Microsoft :: Windows",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10"
]
requires-python = ">=3.9"
dependencies = [
  "wasabi>=0.9.1,<1.1.2",
  "scikit-learn>=1.1.2,<1.2.3",
  "wandb>=0.12.0,<0.14.1",
  "deepchecks>=0.8.0,<0.12.0",
  "dill>=0.3.0,<0.3.7",
  "srsly>=2.4.4,<2.4.6",
  "SQLAlchemy>=1.4.41, <2.0.8",
  "pyodbc>=4.0.34, <4.0.36",
  "dask>=2022.9.0,<2023.4.0",
  "pydantic>=1.9.0, <1.11.0",
  "psutil>=5.9.1, <6.0.0",
  "pandas>=1.4.0,<1.6.0",
  "catalogue>=2.0.0, <2.1.0",
  "numpy>=1.23.3,<1.24.2",
  "transformers>=4.22.2, <5.0.0",
  "pyarrow>=9.0.0,<11.1.0",
  "psycopmlutils>=0.2.4,<0.12.0",
  "protobuf<=3.20.3", # Other versions give errors with pytest, super weird!
  "frozendict>=2.3.4"
]

[project.optional-dependencies]
dev = [
  "cruft",
  "pylint",
  "ruff",
  "black>=22.8.0,<23.1.1",
  "docformatter>=1.5.0, <1.5.2",
  "pre-commit==3.2.0",
  "mypy==0.991",
  "pydantic"
]
tests = [
  "pytest>=7.1.3,<7.2.3",
  "pytest-cov>=3.0.0,<4.0.1",
  "pytest-xdist>=2.4.0,<3.2.1",
  "timeseriesflattener>=0.21.0"
]

[tool.mypy]
ignore_missing_imports = true
no_implicit_optional = true
warn_unused_ignores = true
warn_unreachable = true

[tool.pylint]
load-plugins = "pylint.extensions.docparams,pylint.extensions.code_style,pylint.extensions.for_any_all,pylint.extensions.typing"
good-names = "df,p,f,d,e,n,k,i,v"
disable = "too-many-lines,line-too-long,missing-raises-doc,no-self-argument,unused-wildcard-import,wildcard-import,no-else-return,too-many-arguments,redefined-outer-name,c-extension-no-member,wrong-import-order,logging-fstring-interpolation,deprecated-typing-alias,logging-format-interpolation,logging-not-lazy"

[tool.pyright] # Added because of weird pylance error, issue here: https://github.com/microsoft/pylance-release/issues/3366

[tool.pytest]
n = 0

[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = [
  "A",
  "ARG",
  "B",
  "C4",
  "COM",
  "D417",
  "E",
  "ERA",
  "F",
  "I",
  "ICN",
  "NPY001",
  "PD002",
  "PIE",
  "PLE",
  "PLW",
  "PT",
  "UP",
  "Q",
  "PTH",
  "RSE",
  "RET",
  "RUF",
  "SIM",
  "W"
]
ignore = [
  "ANN101",
  "ANN401",
  "E402",
  "E501",
  "F401",
  "F841",
  "RET504"
]
# Allow autofix for all enabled rules (when `--fix`) is provided.
unfixable = ["ERA"]

# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
  "__init__.py"
]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
target-version = "py39"

[tool.ruff.flake8-annotations]
mypy-init-return = true
suppress-none-returning = true

[tool.ruff.isort]
known-third-party = ["wandb"]

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.semantic_release]
branch = "main"
version_variable = [
  "pyproject.toml:version"
]
upload_to_pypi = true
upload_to_release = true
build_command = "python -m pip install build; python -m build"

[tool.setuptools]
include-package-data = true
