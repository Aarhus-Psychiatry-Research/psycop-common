[project_info]
experiment_path = "/."

[trainer]
@trainers = "split_trainer"
uuid_col_name = "pred_time_uuid"
training_outcome_col_name = "outcome"
validation_outcome_col_name = "outcome"
logger = {"@loggers":"terminal_logger"}
metric = {"@metrics":"binary_auroc"}
training_data = {"@data":"minimal_test_data"}
validation_data = {"@data":"minimal_test_data"}

[trainer.preprocessing_pipeline]
@preprocessing = "baseline_preprocessing_pipeline"
logger = {"@loggers":"terminal_logger"}

[trainer.preprocessing_pipeline.*.age_filter]
@preprocessing = "age_filter"
min_age = 4
max_age = 99
age_col_name = "pred_age"

[trainer.task]
@tasks = "binary_classification"

[trainer.task.task_pipe]
@task_pipelines = "binary_classification_pipeline"

[trainer.task.task_pipe.sklearn_pipe]
@task_pipelines = "pipe_constructor"

[trainer.task.task_pipe.sklearn_pipe.*.logistic_regression]
@estimator_steps_suggesters = "logistic_regression_suggester"
solvers = ["saga"]
penalties = ["l1","l2","elasticnet"]

[trainer.task.task_pipe.sklearn_pipe.*.logistic_regression.C]
low = 0.00000001
high = 10
logarithmic = false

[trainer.task.task_pipe.sklearn_pipe.*.logistic_regression.l1_ratio]
low = 0.0
high = 1
logarithmic = false