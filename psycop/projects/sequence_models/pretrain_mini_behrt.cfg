

[training]
batch_size=512
num_workers_for_dataloader=8

[training.trainer]
accelerator = "auto"
strategy = "auto"
devices = "auto"
num_nodes= 1
# precision = "32-true"
precision = "bf16-mixed"
max_epochs = null
min_epochs = null
max_steps = 1000000
min_steps = null
limit_train_batches = null
limit_val_batches = null
limit_test_batches = null
limit_predict_batches = null
overfit_batches = 0.0
val_check_interval = null
check_val_every_n_epoch = 20
num_sanity_val_steps = 0
log_every_n_steps = 2
enable_checkpointing = null
enable_progress_bar = null
enable_model_summary = null
accumulate_grad_batches = 1
gradient_clip_val = null
gradient_clip_algorithm = null
default_root_dir = "logs/"

[training.trainer.callbacks]
@callbacks = "callback_list"

[training.trainer.callbacks.*.model_checkpoint]
@callbacks = "model_checkpoint"
monitor = "val_loss"
save_top_k = 5
every_n_epochs = 1
mode = "min"
save_dir = ${logger_factory.save_dir}

[training.trainer.callbacks.*.learning_rate_monitor]
@callbacks = "learning_rate_monitor"
logging_interval = "epoch"


[logger_factory]
@loggers = "wandb"
experiment_name = "pretrain_mini_behrt"
run_name = "mini_behrt"
save_dir = "logs/"

[model_and_dataset]
[model_and_dataset.model]
@tasks = "behrt"

[model_and_dataset.model.optimizer]
@optimizers = "adam"
lr = 0.03

[model_and_dataset.model.lr_scheduler]
@lr_schedulers = "linear_schedule_with_warmup"
num_warmup_steps = 1000
num_training_steps = ${training.trainer.max_steps}


[model_and_dataset.model.embedding_module]
@embedders = "behrt_embedder"
d_model = 32
dropout_prob = 0.1
max_sequence_length = 256
patient_slice_creator = ${model_and_dataset.training_dataset}

[model_and_dataset.model.encoder_module]
@layers = "transformer_encoder"
num_layers = 2

[model_and_dataset.model.encoder_module.encoder_layer]
@layers = "transformer_encoder_layer"
d_model = ${model_and_dataset.model.embedding_module.d_model}
nhead = 8
dim_feedforward = 128
layer_norm_eps = 1e-12
norm_first = true

[cohort_definer]
@cohorts = "t2d"

[event_loader]
@utilities = "list_creator"

[event_loader.*.diagnoses]
@event_loaders = "diagnoses"
min_n_visits = 5

[model_and_dataset.training_dataset]
@datasets = "unlabelled_slice_creator"
cohort_definer = ${cohort_definer}
event_loaders = ${event_loader}
split_name = "train"

[model_and_dataset.validation_dataset]
@datasets = "unlabelled_slice_creator"
cohort_definer = ${cohort_definer}
event_loaders = ${event_loader}
split_name = "val"

