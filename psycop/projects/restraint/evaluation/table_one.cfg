[project_info]
experiment_path = "E:/shared_resources/restraint/training/"

[trainer]
@trainers = "crossval_trainer"
uuid_col_name = "prediction_time_uuid"
outcome_col_name = "outc_outcome_all_restraint_within_2_days_boolean_fallback_0_dichotomous"
n_splits = 5
group_col_name = "dw_ek_borger"
metric = {"@metrics":"binary_auroc"}
additional_metrics = null

[trainer.preprocessing_pipeline]
@preprocessing = "baseline_preprocessing_pipeline"


[trainer.preprocessing_pipeline.*.bool_to_int]
@preprocessing = "bool_to_int"

[trainer.preprocessing_pipeline.*.regex_meta_blacklist]
@preprocessing = "regex_column_blacklist"
* = ["pred_.+tfidf.+"]

[trainer.preprocessing_pipeline.*.sufficient_lookahead_filter]
@preprocessing = "window_filter"
timestamp_col_name = "timestamp"
n_days = 2
direction = "ahead"

[trainer.preprocessing_pipeline.*.columns_exist]
@preprocessing = "column_exists_validator"
column_names = ["prediction_time_uuid","pred_age_in_years","pred_sex_female"]

[trainer.preprocessing_pipeline.*.column_prefix_count_expectation]
@preprocessing = "column_prefix_count_expectation"
column_expectations = [["outc_",4],["timestamp",1]]

[trainer.task]
@tasks = "binary_classification"

[trainer.task.task_pipe]
@task_pipelines = "binary_classification_pipeline"

[trainer.task.task_pipe.sklearn_pipe]
@task_pipelines = "pipe_constructor"

[trainer.task.task_pipe.sklearn_pipe.*.model]
@estimator_steps = "xgboost"
alpha = 0
reg_lambda = 1
max_depth = 3
learning_rate = 0.3
gamma = 0
tree_method = "gpu_hist"
grow_policy = "depthwise"
n_estimators = 100

[trainer.training_data]
@data = "parquet_vertical_concatenator"
paths = ["E:/shared_resources/restraint/flattened_datasets/full_feature_set_structured_tfidf_750_all_outcomes/full_with_pred_adm_day_count.parquet"]
validate_on_init = true