[project_info]
experiment_path = /.

[logger]
@loggers = "terminal_logger"

[trainer]
@trainers = "crossval_trainer"
outcome_col_name = "outcome"
n_splits = 5
group_col_name = "dw_ek_borger"

[trainer.metric]
@metrics = "binary_auroc"

[trainer.data]
@training_data = "minimal_test_data"

[trainer.logger]
@loggers = "terminal_logger"

#################
# Preprocessing #
#################
[trainer.preprocessing_pipeline]
@preprocessing = "baseline_preprocessing_pipeline"

[trainer.preprocessing_pipeline.*.col_validator]
@preprocessing = "column_exists_validator"
age = "pred_age"
pred_time_uuid = "pred_time_uuid"

[trainer.preprocessing_pipeline.*.prefix_count_validator]
outcome_prefix = ["outc_", 1]

[trainer.preprocessing_pipeline.*.age_filter]
@preprocessing = "age_filter"
min_age = 0
max_age = 99
age_col_name = ${trainer.preprocessing_pipeline.*.col_validator.age}

########
# Task #
########
[trainer.task]
@tasks = "binary_classification"
age_col_name = ${trainer.preprocessing_pipeline.*.col_validator.pred_time_uuid}

[trainer.task.task_pipe]
@task_pipelines = "binary_classification_pipeline"

[trainer.task.task_pipe.sklearn_pipe]
@task_pipelines = "pipe_constructor"

[trainer.task.task_pipe.sklearn_pipe.*.logistic_regression]
@estimator_steps = "logistic_regression"

